diff --git a/Makefile.in b/Makefile.in
index 638b9fb..bde5865 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -246,7 +246,7 @@ OBJ_CC = \
 	mobile/mip.o mobile/mip-reg.o mobile/gridkeeper.o \
 	mobile/propagation.o mobile/tworayground.o \
 	mobile/nakagami.o \
-	mobile/antenna.o mobile/omni-antenna.o \
+	mobile/antenna.o mobile/omni-antenna.o mobile/dir-antenna.o \
 	mobile/shadowing.o mobile/shadowing-vis.o mobile/dumb-agent.o \
 	common/bi-connector.o common/node.o \
 	common/mobilenode.o \
diff --git a/mac/wireless-phy.cc b/mac/wireless-phy.cc
index 0790909..b76965b 100644
--- a/mac/wireless-phy.cc
+++ b/mac/wireless-phy.cc
@@ -47,6 +47,7 @@
 #include <propagation.h>
 #include <modulation.h>
 #include <omni-antenna.h>
+#include <dir-antenna.h>
 #include <wireless-phy.h>
 #include <packet.h>
 #include <ip.h>
@@ -188,6 +189,9 @@ WirelessPhy::command(int argc, const char*const* argv)
 			assert(propagation_ == 0);
 			propagation_ = (Propagation*) obj;
 			return TCL_OK;
+		} else if (strcasecmp(argv[1], "dir-antenna") == 0) {
+			ant_ = (DirAntenna*) obj;
+			return TCL_OK;
 		} else if (strcasecmp(argv[1], "antenna") == 0) {
 			ant_ = (Antenna*) obj;
 			return TCL_OK;
diff --git a/mobile/antenna.txt b/mobile/antenna.txt
new file mode 100644
index 0000000..1185446
--- /dev/null
+++ b/mobile/antenna.txt
@@ -0,0 +1,1800 @@
+1	0	24
+1	1	23.5
+1	2	23
+1	3	22.5
+1	4	22
+1	5	21
+1	6	18.7
+1	7	16.4
+1	8	14
+1	9	9
+1	10	4
+1	11	2
+1	12	0
+1	13	-2
+1	14	-4
+1	15	-6
+1	16	-10
+1	17	-14
+1	18	-18
+1	19	-22
+1	20	-26
+1	21	-23.6
+1	22	-21.2
+1	23	-18.8
+1	24	-16.4
+1	25	-14
+1	26	-11.6
+1	27	-9.2
+1	28	-6.8
+1	29	-4.4
+1	30	-2
+1	31	-4.8
+1	32	-7.6
+1	33	-10.4
+1	34	-13.2
+1	35	-16
+1	36	-13.6
+1	37	-11.2
+1	38	-8.8
+1	39	-6.4
+1	40	-4
+1	41	-4.7
+1	42	-5.4
+1	43	-6.1
+1	44	-6.8
+1	45	-7.5
+1	46	-8.2
+1	47	-8.9
+1	48	-9.6
+1	49	-10.3
+1	50	-11
+1	51	-12
+1	52	-13
+1	53	-14
+1	54	-15
+1	55	-16
+1	56	-14.4
+1	57	-12.8
+1	58	-11.2
+1	59	-9.6
+1	60	-8
+1	61	-8.9
+1	62	-9.8
+1	63	-10.7
+1	64	-11.6
+1	65	-12.5
+1	66	-13.4
+1	67	-14.3
+1	68	-15.2
+1	69	-16.1
+1	70	-17
+1	71	-17.9
+1	72	-18.8
+1	73	-19.7
+1	74	-20.6
+1	75	-21.5
+1	76	-22.4
+1	77	-23.3
+1	78	-24.2
+1	79	-25.1
+1	80	-26
+1	81	-20.8
+1	82	-15.6
+1	83	-10.4
+1	84	-5.2
+1	85	0
+1	86	-1.2
+1	87	-2.4
+1	88	-3.6
+1	89	-4.8
+1	90	-6
+1	91	-9
+1	92	-12
+1	93	-15
+1	94	-18
+1	95	-21
+1	96	-24
+1	97	-27
+1	98	-30
+1	99	-33
+1	100	-36
+1	101	-36
+1	102	-36
+1	103	-36
+1	104	-36
+1	105	-36
+1	106	-36
+1	107	-36
+1	108	-36
+1	109	-36
+1	110	-36
+1	111	-36
+1	112	-36
+1	113	-36
+1	114	-36
+1	115	-36
+1	116	-36
+1	117	-36
+1	118	-36
+1	119	-36
+1	120	-36
+1	121	-36
+1	122	-36
+1	123	-36
+1	124	-36
+1	125	-36
+1	126	-36
+1	127	-36
+1	128	-36
+1	129	-36
+1	130	-36
+1	131	-36
+1	132	-36
+1	133	-36
+1	134	-36
+1	135	-36
+1	136	-36
+1	137	-36
+1	138	-36
+1	139	-36
+1	140	-36
+1	141	-36
+1	142	-36
+1	143	-36
+1	144	-36
+1	145	-36
+1	146	-36
+1	147	-36
+1	148	-36
+1	149	-36
+1	150	-36
+1	151	-36
+1	152	-36
+1	153	-36
+1	154	-36
+1	155	-36
+1	156	-36
+1	157	-36
+1	158	-36
+1	159	-36
+1	160	-36
+1	161	-36
+1	162	-36
+1	163	-36
+1	164	-36
+1	165	-36
+1	166	-36
+1	167	-36
+1	168	-36
+1	169	-36
+1	170	-36
+1	171	-36
+1	172	-36
+1	173	-36
+1	174	-36
+1	175	-36
+1	176	-32
+1	177	-28
+1	178	-24
+1	179	-20
+1	180	-16
+1	181	-20
+1	182	-24
+1	183	-28
+1	184	-32
+1	185	-36
+1	186	-35.65
+1	187	-35.3
+1	188	-34.95
+1	189	-34.6
+1	190	-34.25
+1	191	-33.9
+1	192	-33.55
+1	193	-33.2
+1	194	-32.85
+1	195	-32.5
+1	196	-32.15
+1	197	-31.8
+1	198	-31.45
+1	199	-31.1
+1	200	-30.75
+1	201	-30.4
+1	202	-30.05
+1	203	-29.7
+1	204	-29.35
+1	205	-29
+1	206	-28.65
+1	207	-28.3
+1	208	-27.95
+1	209	-27.6
+1	210	-27.25
+1	211	-26.9
+1	212	-26.55
+1	213	-26.2
+1	214	-25.85
+1	215	-25.5
+1	216	-25.15
+1	217	-24.8
+1	218	-24.45
+1	219	-24.1
+1	220	-23.75
+1	221	-23.4
+1	222	-23.05
+1	223	-22.7
+1	224	-22.35
+1	225	-22
+1	226	-21.65
+1	227	-21.3
+1	228	-20.95
+1	229	-20.6
+1	230	-20.25
+1	231	-19.9
+1	232	-19.55
+1	233	-19.2
+1	234	-18.85
+1	235	-18.5
+1	236	-18.15
+1	237	-17.8
+1	238	-17.45
+1	239	-17.1
+1	240	-16.75
+1	241	-16.4
+1	242	-16.05
+1	243	-15.7
+1	244	-15.35
+1	245	-15
+1	246	-14.65
+1	247	-14.3
+1	248	-13.95
+1	249	-13.6
+1	250	-13.25
+1	251	-12.9
+1	252	-12.55
+1	253	-12.2
+1	254	-11.85
+1	255	-11.5
+1	256	-11.15
+1	257	-10.8
+1	258	-10.45
+1	259	-10.1
+1	260	-9.75
+1	261	-9.4
+1	262	-9.05
+1	263	-8.7
+1	264	-8.35
+1	265	-8
+1	266	-7.65
+1	267	-7.3
+1	268	-6.95
+1	269	-6.6
+1	270	-6
+1	271	-7
+1	272	-8
+1	273	-9
+1	274	-10
+1	275	-11
+1	276	-12
+1	277	-13
+1	278	-14
+1	279	-15
+1	280	-16
+1	281	-17
+1	282	-18
+1	283	-19
+1	284	-20
+1	285	-21
+1	286	-20
+1	287	-19
+1	288	-18
+1	289	-17
+1	290	-16
+1	291	-15
+1	292	-14
+1	293	-13
+1	294	-12
+1	295	-11
+1	296	-10
+1	297	-9
+1	298	-8
+1	299	-7
+1	300	-6
+1	301	-5
+1	302	-4
+1	303	-3
+1	304	-2
+1	305	-1
+1	306	-3
+1	307	-5
+1	308	-7
+1	309	-9
+1	310	-11
+1	311	-13
+1	312	-15
+1	313	-17
+1	314	-19
+1	315	-21
+1	316	-17.6
+1	317	-14.2
+1	318	-10.8
+1	319	-7.4
+1	320	-4
+1	321	-4.7
+1	322	-5.4
+1	323	-6.1
+1	324	-6.8
+1	325	-7.5
+1	326	-8.2
+1	327	-8.9
+1	328	-9.6
+1	329	-10.3
+1	330	-11
+1	331	-10
+1	332	-9
+1	333	-8
+1	334	-7
+1	335	-6
+1	336	-5
+1	337	-4
+1	338	-3
+1	339	-2
+1	340	-1
+1	341	-3
+1	342	-5
+1	343	-7
+1	344	-9
+1	345	-11
+1	346	-7.5
+1	347	-4
+1	348	-0.5
+1	349	3
+1	350	6.5
+1	351	10
+1	352	14
+1	353	16
+1	354	18
+1	355	20
+1	356	22
+1	357	22.5
+1	358	23
+1	359	23.5
+2	0	0
+2	1	0
+2	2	0
+2	3	0
+2	4	0
+2	5	0
+2	6	0
+2	7	0
+2	8	0
+2	9	-0.5
+2	10	-1
+2	11	-1.25
+2	12	-1.5
+2	13	-1.875
+2	14	-2.25
+2	15	-2.625
+2	16	-3
+2	17	-3.4
+2	18	-3.8
+2	19	-4.2
+2	20	-4.6
+2	21	-4.94
+2	22	-5.28
+2	23	-5.62
+2	24	-5.96
+2	25	-6.3
+2	26	-6.64
+2	27	-6.98
+2	28	-7.32000000000001
+2	29	-7.66000000000001
+2	30	-8
+2	31	-9.4
+2	32	-10.8
+2	33	-12.2
+2	34	-13.6
+2	35	-15
+2	36	-16
+2	37	-17
+2	38	-18
+2	39	-19
+2	40	-20
+2	41	-23
+2	42	-26
+2	43	-29
+2	44	-32
+2	45	-35
+2	46	-38
+2	47	-41
+2	48	-44
+2	49	-47
+2	50	-50
+2	51	-43.6
+2	52	-37.2
+2	53	-30.8
+2	54	-24.4
+2	55	-18
+2	56	-17.6
+2	57	-17.2
+2	58	-16.8
+2	59	-16.4
+2	60	-16
+2	61	-16.4
+2	62	-16.8
+2	63	-17.2
+2	64	-17.6
+2	65	-18
+2	66	-19.2
+2	67	-20.4
+2	68	-21.6
+2	69	-22.8
+2	70	-24
+2	71	-25.2
+2	72	-26.4
+2	73	-27.6
+2	74	-28.8
+2	75	-30
+2	76	-31.33
+2	77	-32.67
+2	78	-33.99
+2	79	-35.32
+2	80	-36.65
+2	81	-37.98
+2	82	-39.31
+2	83	-40.64
+2	84	-41.97
+2	85	-43.3
+2	86	-44.63
+2	87	-45.96
+2	88	-47.29
+2	89	-48.62
+2	90	-50
+2	91	-48.75
+2	92	-47.5
+2	93	-46.25
+2	94	-45
+2	95	-43.75
+2	96	-42.5
+2	97	-41.25
+2	98	-40
+2	99	-38.75
+2	100	-37.5
+2	101	-36.25
+2	102	-35
+2	103	-33.75
+2	104	-32.5
+2	105	-31.25
+2	106	-30
+2	107	-28.75
+2	108	-27.5
+2	109	-26.25
+2	110	-25
+2	111	-25.2
+2	112	-25.4
+2	113	-25.6
+2	114	-25.8
+2	115	-26
+2	116	-26.2
+2	117	-26.4
+2	118	-26.6
+2	119	-26.8
+2	120	-27
+2	121	-26.8
+2	122	-26.6
+2	123	-26.4
+2	124	-26.2
+2	125	-26
+2	126	-25.8
+2	127	-25.6
+2	128	-25.4
+2	129	-25.2
+2	130	-25
+2	131	-30
+2	132	-35
+2	133	-40
+2	134	-45
+2	135	-50
+2	136	-46
+2	137	-42
+2	138	-38
+2	139	-34
+2	140	-30
+2	141	-29.8
+2	142	-29.6
+2	143	-29.4
+2	144	-29.2
+2	145	-29
+2	146	-28.8
+2	147	-28.6
+2	148	-28.4
+2	149	-28.2
+2	150	-28
+2	151	-29.1
+2	152	-30.2
+2	153	-31.3
+2	154	-32.4
+2	155	-33.5
+2	156	-34.6
+2	157	-35.7
+2	158	-36.8
+2	159	-37.9
+2	160	-39
+2	161	-40.1
+2	162	-41.2
+2	163	-42.3
+2	164	-43.4
+2	165	-44.5
+2	166	-45.6
+2	167	-46.7
+2	168	-47.8
+2	169	-48.9
+2	170	-50
+2	171	-50
+2	172	-50
+2	173	-50
+2	174	-50
+2	175	-50
+2	176	-50
+2	177	-50
+2	178	-50
+2	179	-50
+2	180	-50
+2	181	-50
+2	182	-50
+2	183	-50
+2	184	-50
+2	185	-50
+2	186	-50
+2	187	-50
+2	188	-50
+2	189	-50
+2	190	-50
+2	191	-50
+2	192	-50
+2	193	-50
+2	194	-50
+2	195	-50
+2	196	-50
+2	197	-50
+2	198	-50
+2	199	-50
+2	200	-50
+2	201	-49
+2	202	-48
+2	203	-47
+2	204	-46
+2	205	-45
+2	206	-44
+2	207	-43
+2	208	-42
+2	209	-41
+2	210	-40
+2	211	-39.5
+2	212	-39
+2	213	-38.5
+2	214	-38
+2	215	-37.5
+2	216	-37
+2	217	-36.5
+2	218	-36
+2	219	-35.5
+2	220	-35
+2	221	-34.7
+2	222	-34.4
+2	223	-34.1
+2	224	-33.8
+2	225	-33.5
+2	226	-33.2
+2	227	-32.9
+2	228	-32.6
+2	229	-32.3
+2	230	-32
+2	231	-32.2
+2	232	-32.4
+2	233	-32.6
+2	234	-32.8
+2	235	-33
+2	236	-33.2
+2	237	-33.4
+2	238	-33.6
+2	239	-33.8
+2	240	-34
+2	241	-34.4
+2	242	-34.8
+2	243	-35.2
+2	244	-35.6
+2	245	-36
+2	246	-36.4
+2	247	-36.8
+2	248	-37.2
+2	249	-37.6
+2	250	-38
+2	251	-39.2
+2	252	-40.4
+2	253	-41.6
+2	254	-42.8
+2	255	-44
+2	256	-45.2
+2	257	-46.4
+2	258	-47.6
+2	259	-48.8
+2	260	-50
+2	261	-48.5
+2	262	-47
+2	263	-45.5
+2	264	-44
+2	265	-42.5
+2	266	-41
+2	267	-39.5
+2	268	-38
+2	269	-36.5
+2	270	-35
+2	271	-34.33
+2	272	-33.66
+2	273	-32.99
+2	274	-32.32
+2	275	-31.65
+2	276	-30.98
+2	277	-30.31
+2	278	-29.64
+2	279	-28.97
+2	280	-28.3
+2	281	-27.63
+2	282	-26.96
+2	283	-26.29
+2	284	-25.62
+2	285	-25
+2	286	-24.5
+2	287	-24
+2	288	-23.5
+2	289	-23
+2	290	-22.5
+2	291	-22
+2	292	-21.5
+2	293	-21
+2	294	-20.5
+2	295	-20
+2	296	-19.867
+2	297	-19.734
+2	298	-19.601
+2	299	-19.468
+2	300	-19.335
+2	301	-19.202
+2	302	-19.069
+2	303	-18.936
+2	304	-18.803
+2	305	-18.67
+2	306	-18.537
+2	307	-18.404
+2	308	-18.271
+2	309	-18.138
+2	310	-18
+2	311	-24.4
+2	312	-30.8
+2	313	-37.2
+2	314	-43.6
+2	315	-50
+2	316	-47.467
+2	317	-44.934
+2	318	-42.401
+2	319	-39.868
+2	320	-37.335
+2	321	-34.802
+2	322	-32.269
+2	323	-29.736
+2	324	-27.203
+2	325	-24.67
+2	326	-22.137
+2	327	-19.604
+2	328	-17.071
+2	329	-14.538
+2	330	-12
+2	331	-11.5
+2	332	-11
+2	333	-10.5
+2	334	-10
+2	335	-9
+2	336	-8
+2	337	-7
+2	338	-6
+2	339	-6.5
+2	340	-5
+2	341	-4.66
+2	342	-4.32
+2	343	-3.98
+2	344	-3.64
+2	345	-3.35
+2	346	-3.1
+2	347	-2.7
+2	348	-2.3
+2	349	-1.9
+2	350	-1.5
+2	351	-1.25
+2	352	-1
+2	353	-0.75
+2	354	-0.5
+2	355	-0.25
+2	356	0
+2	357	0
+2	358	0
+2	359	0
+3	0	0
+3	1	0
+3	2	0
+3	3	0
+3	4	0
+3	5	
+3	6	
+3	7	
+3	8	-1
+3	9	
+3	10	-2
+3	11	
+3	12	-3
+3	13	
+3	14	-5
+3	15	
+3	16	
+3	17	
+3	18	
+3	19	-8
+3	20	-10
+3	21	-30
+3	22	
+3	23	
+3	24	
+3	25	-35
+3	26	
+3	27	
+3	28	
+3	29	
+3	30	-25
+3	31	
+3	32	
+3	33	
+3	34	
+3	35	
+3	36	
+3	37	
+3	38	
+3	39	
+3	40	-18
+3	41	
+3	42	
+3	43	
+3	44	
+3	45	
+3	46	
+3	47	-15
+3	48	
+3	49	
+3	50	-14
+3	51	
+3	52	-13
+3	53	
+3	54	
+3	55	-30
+3	56	
+3	57	
+3	58	
+3	59	
+3	60	-20
+3	61	
+3	62	
+3	63	
+3	64	
+3	65	-17
+3	66	
+3	67	
+3	68	
+3	69	
+3	70	-16
+3	71	
+3	72	
+3	73	
+3	74	-16
+3	75	
+3	76	
+3	77	
+3	78	-20
+3	79	
+3	80	-19
+3	81	
+3	82	
+3	83	
+3	84	
+3	85	-18
+3	86	
+3	87	
+3	88	-20
+3	89	
+3	90	-19
+3	91	
+3	92	
+3	93	
+3	94	
+3	95	-22
+3	96	
+3	97	
+3	98	
+3	99	
+3	100	-30
+3	101	
+3	102	
+3	103	
+3	104	
+3	105	
+3	106	
+3	107	
+3	108	
+3	109	
+3	110	-26
+3	111	
+3	112	
+3	113	
+3	114	
+3	115	
+3	116	
+3	117	
+3	118	
+3	119	
+3	120	-25
+3	121	
+3	122	
+3	123	
+3	124	
+3	125	
+3	126	
+3	127	
+3	128	
+3	129	
+3	130	-23.5
+3	131	
+3	132	
+3	133	
+3	134	
+3	135	
+3	136	
+3	137	
+3	138	
+3	139	
+3	140	-31
+3	141	
+3	142	
+3	143	
+3	144	
+3	145	
+3	146	
+3	147	
+3	148	
+3	149	
+3	150	-30
+3	151	
+3	152	
+3	153	
+3	154	
+3	155	
+3	156	
+3	157	
+3	158	
+3	159	
+3	160	
+3	161	
+3	162	
+3	163	
+3	164	
+3	165	
+3	166	
+3	167	
+3	168	
+3	169	
+3	170	-40
+3	171	
+3	172	
+3	173	
+3	174	
+3	175	
+3	176	
+3	177	
+3	178	
+3	179	
+3	180	
+3	181	
+3	182	
+3	183	
+3	184	
+3	185	
+3	186	
+3	187	
+3	188	
+3	189	
+3	190	-40
+3	191	
+3	192
+3	193
+3	194
+3	195
+3	196
+3	197
+3	198
+3	199
+3	200
+3	201
+3	202
+3	203
+3	204
+3	205
+3	206
+3	207
+3	208	
+3	209	
+3	210	
+3	211	
+3	212	
+3	213	
+3	214	
+3	215	
+3	216	
+3	217	
+3	218	
+3	219	
+3	220	-30
+3	221	
+3	222	
+3	223	
+3	224
+3	225
+3	226
+3	227
+3	228
+3	229
+3	230
+3	231
+3	232
+3	233
+3	234
+3	235
+3	236
+3	237
+3	238
+3	239
+3	240	-20
+3	241	
+3	242	
+3	243	
+3	244	
+3	245	
+3	246	
+3	247	
+3	248	
+3	249	
+3	250	-18
+3	251	
+3	252	
+3	253	
+3	254	
+3	255	
+3	256	
+3	257	
+3	258	
+3	259	
+3	260	-17
+3	261	
+3	262	
+3	263	
+3	264	-16.5
+3	265	
+3	266	
+3	267	
+3	268	
+3	269	
+3	270	-18
+3	271	
+3	272	
+3	273	
+3	274	
+3	275	-19.5
+3	276	-21
+3	277	
+3	278	
+3	279	
+3	280	-20
+3	281	
+3	282	
+3	283	
+3	284	
+3	285	-20.5
+3	286	
+3	287	
+3	288	
+3	289	
+3	290	-19.5
+3	291	
+3	292	
+3	293	
+3	294	
+3	295	-30
+3	296	
+3	297	
+3	298	
+3	299	
+3	300	-20
+3	301	
+3	302	
+3	303	
+3	304	
+3	305	
+3	306	
+3	307	
+3	308	
+3	309	
+3	310	-15
+3	311	
+3	312	
+3	313	
+3	314	
+3	315	-15
+3	316	
+3	317	-15
+3	318	
+3	319	
+3	320	-13
+3	321	
+3	322	
+3	323	
+3	324	
+3	325	
+3	326	
+3	327	
+3	328	
+3	329	
+3	330	
+3	331	
+3	332	
+3	333	-32
+3	334	
+3	335	
+3	336	
+3	337	-10
+3	338	
+3	339	
+3	340	-5
+3	341	
+3	342	
+3	343	
+3	344	-4
+3	345	
+3	346	
+3	347	
+3	348	-3
+3	349	
+3	350	-2
+3	351	
+3	352	-1
+3	353	
+3	354	
+3	355	
+3	356	0
+3	357	0
+3	358	0
+3	359	0
+4	0	0
+4	1	
+4	2	
+4	3	
+4	4	
+4	5	
+4	6	
+4	7	
+4	8	
+4	9	
+4	10	
+4	11	
+4	12	
+4	13	
+4	14	
+4	15	
+4	16	0
+4	17	
+4	18	
+4	19	
+4	20	-0.5
+4	21	
+4	22	
+4	23	
+4	24	
+4	25	
+4	26	
+4	27	
+4	28	
+4	29	
+4	30	-2
+4	31	
+4	32	
+4	33	
+4	34	
+4	35	
+4	36	
+4	37	
+4	38	
+4	39	
+4	40	-3
+4	41	
+4	42	
+4	43	
+4	44	
+4	45	
+4	46	
+4	47	
+4	48	
+4	49	
+4	50	-4
+4	51	
+4	52	
+4	53	
+4	54	
+4	55	
+4	56	
+4	57	
+4	58	
+4	59	
+4	60	-6
+4	61	
+4	62	
+4	63	
+4	64	
+4	65	
+4	66	
+4	67	
+4	68	
+4	69	
+4	70	-8
+4	71	
+4	72	
+4	73	
+4	74	
+4	75	
+4	76	
+4	77	
+4	78	
+4	79	
+4	80	-12
+4	81	
+4	82	
+4	83	
+4	84	
+4	85	
+4	86	
+4	87	
+4	88	
+4	89	
+4	90	-10
+4	91	
+4	92	
+4	93	
+4	94	
+4	95	
+4	96	
+4	97	
+4	98	
+4	99	
+4	100	
+4	101	
+4	102	
+4	103	
+4	104
+4	105
+4	106
+4	107
+4	108
+4	109
+4	110
+4	111
+4	112
+4	113
+4	114
+4	115
+4	116
+4	117
+4	118
+4	119
+4	120	-15
+4	121	
+4	122	
+4	123	
+4	124	
+4	125	
+4	126	
+4	127	
+4	128	
+4	129	
+4	130	-17
+4	131	
+4	132	
+4	133	
+4	134	
+4	135	
+4	136	
+4	137	
+4	138	
+4	139	
+4	140	-20
+4	141	
+4	142	
+4	143	
+4	144	
+4	145	-24
+4	146	
+4	147	
+4	148	
+4	149	
+4	150	
+4	151	
+4	152	
+4	153	
+4	154	
+4	155	
+4	156	
+4	157	
+4	158	
+4	159	
+4	160	-38
+4	161	
+4	162	
+4	163	
+4	164	
+4	165	
+4	166	
+4	167	
+4	168	
+4	169	
+4	170	-30
+4	171	
+4	172	
+4	173	
+4	174	
+4	175	-25
+4	176	
+4	177	
+4	178	
+4	179	
+4	180	-24
+4	181	
+4	182	
+4	183	
+4	184	
+4	185	-25
+4	186	
+4	187	
+4	188	
+4	189	
+4	190	-32
+4	191	
+4	192	
+4	193	
+4	194	
+4	195	
+4	196	
+4	197	
+4	198	
+4	199	
+4	200	
+4	201	
+4	202	
+4	203	
+4	204	
+4	205	
+4	206	
+4	207	
+4	208	
+4	209	
+4	210	
+4	211	
+4	212	
+4	213	
+4	214	
+4	215	-35
+4	216	
+4	217	
+4	218	
+4	219	
+4	220	-22
+4	221	
+4	222	
+4	223	
+4	224	
+4	225	-20
+4	226	
+4	227	
+4	228	
+4	229	
+4	230	-18
+4	231	
+4	232	
+4	233	
+4	234	
+4	235	-16
+4	236	
+4	237	
+4	238	
+4	239	
+4	240	-15
+4	241	
+4	242	
+4	243	
+4	244	
+4	245	
+4	246	
+4	247	
+4	248	
+4	249	
+4	250	-13
+4	251	
+4	252	
+4	253	
+4	254	
+4	255	
+4	256	
+4	257	
+4	258	
+4	259	
+4	260	
+4	261	
+4	262	
+4	263	
+4	264	
+4	265	
+4	266	
+4	267	
+4	268	
+4	269	
+4	270	-10
+4	271	
+4	272	
+4	273	
+4	274	
+4	275	
+4	276	
+4	277	
+4	278	
+4	279	
+4	280	
+4	281	
+4	282	
+4	283	
+4	284	
+4	285	
+4	286	
+4	287	
+4	288	
+4	289	
+4	290	-5
+4	291	
+4	292	
+4	293	
+4	294	
+4	295	
+4	296	
+4	297	
+4	298	
+4	299	
+4	300	-4
+4	301	
+4	302	
+4	303	
+4	304	
+4	305	
+4	306	
+4	307	
+4	308	
+4	309	
+4	310	-3
+4	311	
+4	312	
+4	313	
+4	314	
+4	315	
+4	316	
+4	317	
+4	318	
+4	319	
+4	320	-2
+4	321	
+4	322	
+4	323	
+4	324	
+4	325	
+4	326	
+4	327	
+4	328	
+4	329	
+4	330	-1
+4	331	
+4	332	
+4	333	
+4	334	
+4	335	
+4	336	
+4	337	
+4	338	
+4	339	
+4	340	
+4	341	
+4	342	
+4	343	
+4	344	0
+4	345	0
+4	346	0
+4	347	0
+4	348	0
+4	349	0
+4	350	0
+4	351	0
+4	352	0
+4	353	0
+4	354	0
+4	355	0
+4	356	0
+4	357	0
+4	358	0
+4	359	0
+5	0	0
+5	1	0
+5	2	0
+5	3	0
+5	4	0
+5	5	0
+5	6	0
+5	7	0
+5	8	0
+5	9	0
+5	10	0
+5	11	0
+5	12	0
+5	13	0
+5	14	0
+5	15	0
+5	16	0
+5	17	0
+5	18	0
+5	19	0
+5	20	0
+5	21	0
+5	22	0
+5	23	0
+5	24	0
+5	25	0
+5	26	0
+5	27	0
+5	28	0
+5	29	0
+5	30	0
+5	31	0
+5	32	0
+5	33	0
+5	34	0
+5	35	0
+5	36	0
+5	37	-0.125
+5	38	-0.25
+5	39	-0.375
+5	40	-0.5
+5	41	-0.6
+5	42	-0.7
+5	43	-0.8
+5	44	-0.9
+5	45	-1
+5	46	-1.2
+5	47	-1.4
+5	48	-1.6
+5	49	-1.8
+5	50	-2
+5	51	-2.1
+5	52	-2.2
+5	53	-2.3
+5	54	-2.4
+5	55	-2.5
+5	56	-2.6
+5	57	-2.7
+5	58	-2.8
+5	59	-2.9
+5	60	-3
+5	61	-3.2
+5	62	-3.4
+5	63	-3.6
+5	64	-3.8
+5	65	-4
+5	66	-4.2
+5	67	-4.4
+5	68	-4.6
+5	69	-4.8
+5	70	-5
+5	71	-5.1
+5	72	-5.2
+5	73	-5.3
+5	74	-5.4
+5	75	-5.5
+5	76	-5.6
+5	77	-5.7
+5	78	-5.8
+5	79	-5.9
+5	80	-6
+5	81	-6.2
+5	82	-6.4
+5	83	-6.6
+5	84	-6.8
+5	85	-7
+5	86	-7.2
+5	87	-7.4
+5	88	-7.6
+5	89	-7.8
+5	90	-8
+5	91	-8.33
+5	92	-8.66
+5	93	-8.99
+5	94	-9.32
+5	95	-9.65
+5	96	-10
+5	97	-10.33
+5	98	-10.66
+5	99	-10.99
+5	100	-11.32
+5	101	-11.65
+5	102	-11.98
+5	103	-12.31
+5	104	-12.64
+5	105	-12.97
+5	106	-13.3
+5	107	-13.63
+5	108	-13.96
+5	109	-14.29
+5	110	-15
+5	111	-15.6
+5	112	-16.2
+5	113	-16.8
+5	114	-17.4
+5	115	-18
+5	116	-18.6
+5	117	-19.2
+5	118	-19.8
+5	119	-20.4
+5	120	-21
+5	121	-20.8
+5	122	-20.6
+5	123	-20.4
+5	124	-20.2
+5	125	-20
+5	126	-21.2
+5	127	-22.4
+5	128	-23.6
+5	129	-24.8
+5	130	-26
+5	131	-27.2
+5	132	-28.4
+5	133	-29.6
+5	134	-30.8
+5	135	-32
+5	136	-31.53
+5	137	-31.06
+5	138	-30.59
+5	139	-30.12
+5	140	-29.65
+5	141	-29.18
+5	142	-28.71
+5	143	-28.24
+5	144	-27.77
+5	145	-27.3
+5	146	-26.83
+5	147	-26.36
+5	148	-25.89
+5	149	-25.42
+5	150	-25
+5	151	-24.7
+5	152	-24.4
+5	153	-24.1
+5	154	-23.8
+5	155	-23.5
+5	156	-23.2
+5	157	-22.9
+5	158	-22.6
+5	159	-22.3
+5	160	-22
+5	161	-21.8
+5	162	-21.6
+5	163	-21.4
+5	164	-21.2
+5	165	-21
+5	166	-20.8
+5	167	-20.6
+5	168	-20.4
+5	169	-20.2
+5	170	-20
+5	171	-20
+5	172	-20
+5	173	-20
+5	174	-20
+5	175	-20
+5	176	-20
+5	177	-20
+5	178	-20
+5	179	-20
+5	180	-20
+5	181	-20
+5	182	-20
+5	183	-20
+5	184	-20
+5	185	-20
+5	186	-20.4
+5	187	-20.8
+5	188	-21.2
+5	189	-21.6
+5	190	-22
+5	191	-22.6
+5	192	-23.2
+5	193	-23.8
+5	194	-24.4
+5	195	-25
+5	196	-25.4
+5	197	-25.8
+5	198	-26.2
+5	199	-26.6
+5	200	-27
+5	201	-27.5
+5	202	-28
+5	203	-28.5
+5	204	-29
+5	205	-29.5
+5	206	-30
+5	207	-30.5
+5	208	-31
+5	209	-31.5
+5	210	-32
+5	211	-31.3
+5	212	-30.6
+5	213	-29.9
+5	214	-29.2
+5	215	-28.5
+5	216	-27.8
+5	217	-27.1
+5	218	-26.4
+5	219	-25.7
+5	220	-25
+5	221	-24.5
+5	222	-24
+5	223	-23.5
+5	224	-23
+5	225	-22.5
+5	226	-22
+5	227	-21.5
+5	228	-21
+5	229	-20.5
+5	230	-20
+5	231	-19.6
+5	232	-19.2
+5	233	-18.8
+5	234	-18.4
+5	235	-18
+5	236	-17.6
+5	237	-17.2
+5	238	-16.8
+5	239	-16.4
+5	240	-16
+5	241	-15.8
+5	242	-15.6
+5	243	-15.4
+5	244	-15.2
+5	245	-15
+5	246	-14.8
+5	247	-14.6
+5	248	-14.4
+5	249	-14.2
+5	250	-14
+5	251	-13.6
+5	252	-13.2
+5	253	-12.8
+5	254	-12.4
+5	255	-12
+5	256	-11.6
+5	257	-11.2
+5	258	-10.8
+5	259	-10.4
+5	260	-10
+5	261	-9.8
+5	262	-9.6
+5	263	-9.4
+5	264	-9.2
+5	265	-9
+5	266	-8.8
+5	267	-8.6
+5	268	-8.4
+5	269	-8.2
+5	270	-8
+5	271	-7.8
+5	272	-7.6
+5	273	-7.4
+5	274	-7.2
+5	275	-7
+5	276	-6.8
+5	277	-6.6
+5	278	-6.4
+5	279	-6.2
+5	280	-6
+5	281	-5.8
+5	282	-5.6
+5	283	-5.4
+5	284	-5.2
+5	285	-5
+5	286	-4.8
+5	287	-4.6
+5	288	-4.4
+5	289	-4.2
+5	290	-4
+5	291	-3.9
+5	292	-3.8
+5	293	-3.7
+5	294	-3.6
+5	295	-3.5
+5	296	-3.4
+5	297	-3.3
+5	298	-3.2
+5	299	-3.1
+5	300	-3
+5	301	-2.9
+5	302	-2.8
+5	303	-2.7
+5	304	-2.6
+5	305	-2.5
+5	306	-2.4
+5	307	-2.3
+5	308	-2.2
+5	309	-2.1
+5	310	-2
+5	311	-1.85
+5	312	-1.7
+5	313	-1.55
+5	314	-1.4
+5	315	-1.25
+5	316	-1.1
+5	317	-0.95
+5	318	-0.8
+5	319	-0.65
+5	320	-0.5
+5	321	-0.375
+5	322	-0.25
+5	323	-0.125
+5	324	0
+5	325	0
+5	326	0
+5	327	0
+5	328	0
+5	329	0
+5	330	0
+5	331	0
+5	332	0
+5	333	0
+5	334	0
+5	335	0
+5	336	0
+5	337	0
+5	338	0
+5	339	0
+5	340	0
+5	341	0
+5	342	0
+5	343	0
+5	344	0
+5	345	0
+5	346	0
+5	347	0
+5	348	0
+5	349	0
+5	350	0
+5	351	0
+5	352	0
+5	353	0
+5	354	0
+5	355	0
+5	356	0
+5	357	0
+5	358	0
+5	359	0
diff --git a/mobile/antenna1.txt b/mobile/antenna1.txt
new file mode 100644
index 0000000..42004d3
--- /dev/null
+++ b/mobile/antenna1.txt
@@ -0,0 +1,360 @@
+1	0	24
+1	1	23.5
+1	2	23
+1	3	22.5
+1	4	22
+1	5	21
+1	6	18.7
+1	7	16.4
+1	8	14
+1	9	9
+1	10	4
+1	11	2
+1	12	0
+1	13	-2
+1	14	-4
+1	15	-6
+1	16	-10
+1	17	-14
+1	18	-18
+1	19	-22
+1	20	-26
+1	21	-23.6
+1	22	-21.2
+1	23	-18.8
+1	24	-16.4
+1	25	-14
+1	26	-11.6
+1	27	-9.2
+1	28	-6.8
+1	29	-4.4
+1	30	-2
+1	31	-4.8
+1	32	-7.6
+1	33	-10.4
+1	34	-13.2
+1	35	-16
+1	36	-13.6
+1	37	-11.2
+1	38	-8.8
+1	39	-6.4
+1	40	-4
+1	41	-4.7
+1	42	-5.4
+1	43	-6.1
+1	44	-6.8
+1	45	-7.5
+1	46	-8.2
+1	47	-8.9
+1	48	-9.6
+1	49	-10.3
+1	50	-11
+1	51	-12
+1	52	-13
+1	53	-14
+1	54	-15
+1	55	-16
+1	56	-14.4
+1	57	-12.8
+1	58	-11.2
+1	59	-9.6
+1	60	-8
+1	61	-8.9
+1	62	-9.8
+1	63	-10.7
+1	64	-11.6
+1	65	-12.5
+1	66	-13.4
+1	67	-14.3
+1	68	-15.2
+1	69	-16.1
+1	70	-17
+1	71	-17.9
+1	72	-18.8
+1	73	-19.7
+1	74	-20.6
+1	75	-21.5
+1	76	-22.4
+1	77	-23.3
+1	78	-24.2
+1	79	-25.1
+1	80	-26
+1	81	-20.8
+1	82	-15.6
+1	83	-10.4
+1	84	-5.2
+1	85	0
+1	86	-1.2
+1	87	-2.4
+1	88	-3.6
+1	89	-4.8
+1	90	-6
+1	91	-9
+1	92	-12
+1	93	-15
+1	94	-18
+1	95	-21
+1	96	-24
+1	97	-27
+1	98	-30
+1	99	-33
+1	100	-36
+1	101	-36
+1	102	-36
+1	103	-36
+1	104	-36
+1	105	-36
+1	106	-36
+1	107	-36
+1	108	-36
+1	109	-36
+1	110	-36
+1	111	-36
+1	112	-36
+1	113	-36
+1	114	-36
+1	115	-36
+1	116	-36
+1	117	-36
+1	118	-36
+1	119	-36
+1	120	-36
+1	121	-36
+1	122	-36
+1	123	-36
+1	124	-36
+1	125	-36
+1	126	-36
+1	127	-36
+1	128	-36
+1	129	-36
+1	130	-36
+1	131	-36
+1	132	-36
+1	133	-36
+1	134	-36
+1	135	-36
+1	136	-36
+1	137	-36
+1	138	-36
+1	139	-36
+1	140	-36
+1	141	-36
+1	142	-36
+1	143	-36
+1	144	-36
+1	145	-36
+1	146	-36
+1	147	-36
+1	148	-36
+1	149	-36
+1	150	-36
+1	151	-36
+1	152	-36
+1	153	-36
+1	154	-36
+1	155	-36
+1	156	-36
+1	157	-36
+1	158	-36
+1	159	-36
+1	160	-36
+1	161	-36
+1	162	-36
+1	163	-36
+1	164	-36
+1	165	-36
+1	166	-36
+1	167	-36
+1	168	-36
+1	169	-36
+1	170	-36
+1	171	-36
+1	172	-36
+1	173	-36
+1	174	-36
+1	175	-36
+1	176	-32
+1	177	-28
+1	178	-24
+1	179	-20
+1	180	-16
+1	181	-20
+1	182	-24
+1	183	-28
+1	184	-32
+1	185	-36
+1	186	-35.65
+1	187	-35.3
+1	188	-34.95
+1	189	-34.6
+1	190	-34.25
+1	191	-33.9
+1	192	-33.55
+1	193	-33.2
+1	194	-32.85
+1	195	-32.5
+1	196	-32.15
+1	197	-31.8
+1	198	-31.45
+1	199	-31.1
+1	200	-30.75
+1	201	-30.4
+1	202	-30.05
+1	203	-29.7
+1	204	-29.35
+1	205	-29
+1	206	-28.65
+1	207	-28.3
+1	208	-27.95
+1	209	-27.6
+1	210	-27.25
+1	211	-26.9
+1	212	-26.55
+1	213	-26.2
+1	214	-25.85
+1	215	-25.5
+1	216	-25.15
+1	217	-24.8
+1	218	-24.45
+1	219	-24.1
+1	220	-23.75
+1	221	-23.4
+1	222	-23.05
+1	223	-22.7
+1	224	-22.35
+1	225	-22
+1	226	-21.65
+1	227	-21.3
+1	228	-20.95
+1	229	-20.6
+1	230	-20.25
+1	231	-19.9
+1	232	-19.55
+1	233	-19.2
+1	234	-18.85
+1	235	-18.5
+1	236	-18.15
+1	237	-17.8
+1	238	-17.45
+1	239	-17.1
+1	240	-16.75
+1	241	-16.4
+1	242	-16.05
+1	243	-15.7
+1	244	-15.35
+1	245	-15
+1	246	-14.65
+1	247	-14.3
+1	248	-13.95
+1	249	-13.6
+1	250	-13.25
+1	251	-12.9
+1	252	-12.55
+1	253	-12.2
+1	254	-11.85
+1	255	-11.5
+1	256	-11.15
+1	257	-10.8
+1	258	-10.45
+1	259	-10.1
+1	260	-9.75
+1	261	-9.4
+1	262	-9.05
+1	263	-8.7
+1	264	-8.35
+1	265	-8
+1	266	-7.65
+1	267	-7.3
+1	268	-6.95
+1	269	-6.6
+1	270	-6
+1	271	-7
+1	272	-8
+1	273	-9
+1	274	-10
+1	275	-11
+1	276	-12
+1	277	-13
+1	278	-14
+1	279	-15
+1	280	-16
+1	281	-17
+1	282	-18
+1	283	-19
+1	284	-20
+1	285	-21
+1	286	-20
+1	287	-19
+1	288	-18
+1	289	-17
+1	290	-16
+1	291	-15
+1	292	-14
+1	293	-13
+1	294	-12
+1	295	-11
+1	296	-10
+1	297	-9
+1	298	-8
+1	299	-7
+1	300	-6
+1	301	-5
+1	302	-4
+1	303	-3
+1	304	-2
+1	305	-1
+1	306	-3
+1	307	-5
+1	308	-7
+1	309	-9
+1	310	-11
+1	311	-13
+1	312	-15
+1	313	-17
+1	314	-19
+1	315	-21
+1	316	-17.6
+1	317	-14.2
+1	318	-10.8
+1	319	-7.4
+1	320	-4
+1	321	-4.7
+1	322	-5.4
+1	323	-6.1
+1	324	-6.8
+1	325	-7.5
+1	326	-8.2
+1	327	-8.9
+1	328	-9.6
+1	329	-10.3
+1	330	-11
+1	331	-10
+1	332	-9
+1	333	-8
+1	334	-7
+1	335	-6
+1	336	-5
+1	337	-4
+1	338	-3
+1	339	-2
+1	340	-1
+1	341	-3
+1	342	-5
+1	343	-7
+1	344	-9
+1	345	-11
+1	346	-7.5
+1	347	-4
+1	348	-0.5
+1	349	3
+1	350	6.5
+1	351	10
+1	352	14
+1	353	16
+1	354	18
+1	355	20
+1	356	22
+1	357	22.5
+1	358	23
+1	359	23.5
diff --git a/mobile/dir-antenna.cc b/mobile/dir-antenna.cc
new file mode 100644
index 0000000..4361ca5
--- /dev/null
+++ b/mobile/dir-antenna.cc
@@ -0,0 +1,312 @@
+
+/* -*-	Mode:C++; c-basic-offset:8; tab-width:8; indent-tabs-mode:t -*- */
+/*
+ * Developed by:- Ankur Khandelwal : Siddhartha Saha : Ashwini Kumar : Sabyasachi Roy @ IIT-Kanpur
+ *
+ * dir-antenna.cc
+   $Id: dir-antenna.cc,v 1.4 2005/02/07 15:10:05 bhaskar Exp $
+   */
+
+#include <dir-antenna.h>
+#include <math.h>
+
+
+static class DirAntennaClass : public TclClass {
+public:
+  DirAntennaClass() : TclClass("Antenna/DirAntenna") {}
+  TclObject* create(int, const char*const*) {
+    return (new DirAntenna);
+  }
+	
+} class_DirAntenna;
+
+/* BEGIN<Sabya,Ashwini> */
+
+double DirAntenna::getRxGain(double x, double y, double z, double lambda)
+  // return the gain for a signal from a node at vector dX, dY, dZ
+  // from the receiver at wavelength lambda
+{
+ 
+/*=======================================================================================
+ */
+	/*
+	 * For now, just return 1.0 if the ray (x,y) falls on the cone defined by
+	 * (angle, angle+width), zero otherwise
+	 */
+double angle;
+double dist_ = sqrt(x*x+y*y+z*z);
+if(dist_==0.0)
+{
+	return 1.0;
+}	
+angle = atan2(y,x);
+/* angle is angle from -PI to +PI, inclusive, in radian,
+ * convert to degrees
+ */
+angle = angle*180/M_PI;
+/* Bring it to 0-360 range */
+if(angle < 0) angle += 360;
+if(Type_ == 0)
+{		
+	/* Now to see if it lies inside the cone :
+	 */
+	Gr_ = 0.0;
+	if(upperAngle > lowerAngle){
+		/* Normal case*/
+		if(angle >= lowerAngle && angle <= upperAngle) Gr_ = 1.0;
+	}else if(upperAngle < lowerAngle){
+		/* Like lowerAngle = 350 and upper angle = 10 */
+		if(angle >= lowerAngle || angle <= upperAngle) Gr_ = 1.0;
+	}else{
+		/* both are equal, => 360 width */
+		Gr_ = 1.0;
+	}
+	/* A wild hack, multiply the gain with the ratio of the solid angles */
+	
+	return Gr_*solidAngleRatio;
+}
+else
+{
+	double diff_angle;
+	diff_angle = angle - lowerAngle;
+	if(diff_angle < 0)
+	{
+		while(diff_angle < 0)
+			diff_angle = diff_angle + 360;
+	}
+	if(diff_angle >= 360)
+	{
+		while(diff_angle > 360)
+			diff_angle = diff_angle - 360;
+	}
+	double gain;
+	gain = (gainVals[((int)diff_angle)%360] + gainVals[(((int)diff_angle)+1)%360])/2.0;
+	//	fprintf(stderr,"RX Gain %f %f\n",diff_angle,gainVals[((int)diff_angle)%360]);
+	return (pow(10.0,gain/10));
+
+}	
+}
+
+
+double DirAntenna::getTxGain(double x, double y, double z, double lambda)
+  // return the gain for a signal to a node at vector dX, dY, dZ
+  // from the transmitter at wavelength lambda
+{
+
+/*=======================================================================================
+ */
+	/*
+	 * For now, just return 1.0 if the ray (x,y) falls on the cone defined by
+	 * (angle, angle+width), zero otherwise
+	 */
+	
+double angle;
+double dist_ = sqrt(x*x+y*y+z*z);
+if(dist_==0.0)
+{
+	return 1.0;
+}	
+angle = atan2(y,x);
+/* angle is angle from -PI to +PI, inclusive, in radian,
+ * convert to degrees
+ */
+angle = angle*180/M_PI;
+/* Bring it to 0-360 range */
+if(angle < 0) angle += 360;
+
+if(Type_ == 0)
+{	
+	
+
+	/* Now to see if it lies inside the cone :
+	 */
+	Gt_ = 0.0;
+	if(upperAngle > lowerAngle){
+		/* Normal case*/
+		if(angle >= lowerAngle && angle <= upperAngle) Gt_ = 1.0;
+	}else if(upperAngle < lowerAngle){
+		/* Like lowerAngle = 350 and upper angle = 10 */
+		if(angle >= lowerAngle || angle <= upperAngle) Gt_ = 1.0;
+	}else{
+		/* both are equal, => 360 width */
+		Gt_ = 1.0;
+	}
+	/* A wild hack, multiply the gain with the ratio of the solid angles */
+
+	
+	return Gt_*solidAngleRatio;
+}	
+else
+{
+	double diff_angle;
+	diff_angle = angle - lowerAngle;
+	if(diff_angle < 0)
+	{
+		while(diff_angle < 0)
+			diff_angle = diff_angle + 360;
+	}
+	if(diff_angle >= 360)
+	{
+		while(diff_angle > 360)
+			diff_angle = diff_angle - 360;
+	}
+	double gain;
+	gain = (gainVals[((int)diff_angle)%360] + gainVals[(((int)diff_angle)+1)%360])/2.0;
+	return (pow(10.0,gain/10));
+}
+}
+
+/* END<Sabya,Ashwini> */
+
+DirAntenna::DirAntenna()
+{
+ 
+	 char *antn;
+	 char *token;
+	 int i=0;
+	 Gt_ = 1.0;
+	 Gr_ = 1.0;
+	 Angle_ = 0;
+	 bind("Gt_", &Gt_);
+	 bind("Gr_", &Gr_);
+	 bind("Angle_",&Angle_);
+	 bind("Width_",&Width_);
+	
+	 /* BEGIN<Sabya,Ashwini> */
+
+	 bind("Type_",&Type_);
+	 
+	 /* END<Sabya,Ashwini> */
+
+	 /* calculate lower and upper angle */
+	 lowerAngle = Angle_;
+	 while(lowerAngle < 0){
+		 lowerAngle += 360;
+	 }
+	 upperAngle = lowerAngle + Width_;
+	 while(upperAngle < 0){
+		 upperAngle += 360;
+	 }
+	 
+	 upperAngle %= 360;
+	 lowerAngle %= 360;
+	 solidAngleRatio = 2/(1 - cos(M_PI*Width_/360));
+	 
+	 /* BEGIN<Sabya,Ashwini> */
+
+	 // Checking for the antenna type given
+	 if (Type_ > 8 || Type_ < 0)
+	 {
+		 printf("Invalid antenna type given..should be between 0 & 8;\n");
+		 exit(1);
+	 }
+	 if(Type_ != 0)
+		 initialize_radiation_pattern();
+
+	 /* END<Sabya,Ashwini> */
+
+	 
+	 
+}
+
+int DirAntenna::command(int argc, const char*const* argv)
+{
+	TclObject *obj; 
+
+	if(argc == 3) {
+		if (strcasecmp(argv[1], "setAngle") == 0) {
+			Angle_ = atoi(argv[2]);
+			setSAR();
+			return TCL_OK;
+		}
+		if (strcasecmp(argv[1], "setWidth") == 0) {
+			Width_ = atoi(argv[2]);
+			setSAR();
+			return TCL_OK;
+		}
+		
+		/* BEGIN<Sabya,Ashwini> */
+
+		if(strcasecmp(argv[1], "setType") == 0) {
+			Type_ = atoi(argv[2]);
+			if(Type_ > 8 || Type_ < 0)
+			{	
+				printf("Erroneous Type Input\n");
+				exit(0);
+			}	
+			if(Type_ != 0)
+				initialize_radiation_pattern();
+			return TCL_OK;
+		}
+		/* END<Sabya,Ashwini> */
+
+		if (strcasecmp(argv[1], "setX") == 0) {
+			X_ = atof(argv[2]);
+			return TCL_OK;
+		}
+		if (strcasecmp(argv[1], "setY") == 0) {
+			Y_ = atof(argv[2]);
+			return TCL_OK;
+		}
+		if (strcasecmp(argv[1], "setZ") == 0) {
+			Z_ = atof(argv[2]);
+			return TCL_OK;
+		}
+	}
+	return Antenna::command(argc,argv);
+}
+
+void DirAntenna::setSAR()
+{
+	//printf(" the current value of antenna parameters:\n");
+	//printf("------------------------------------------\n");
+	//printf("angle=%d, width=%d, solidangle=%f lower=%d upper=%d\n",getangle(),getwidth(),getSAR(),getLA(),getUA());
+	lowerAngle = Angle_;
+	 while(lowerAngle < 0){
+		 lowerAngle += 360;
+	 }
+	 upperAngle = lowerAngle + Width_;
+	 while(upperAngle < 0){
+		 upperAngle += 360;
+	 }
+	 
+	 upperAngle %= 360;
+	 lowerAngle %= 360;
+	 solidAngleRatio = 2/(1 - cos(M_PI*Width_/360));
+	 
+}
+
+/* BEGIN<Sabya,Ashwini> */
+
+void DirAntenna::initialize_radiation_pattern()
+{
+	FILE *fp;
+	char *radiation_file;
+	//radiation_file = (char *)malloc(256);
+	radiation_file = getenv("NS_ANTENNA_FILE");
+	if(radiation_file == NULL) {
+		fprintf(stderr, "Env variable NS_ANTENNA_FILE has to be set, see documentation (?)\n");
+		exit(65);
+	}
+	fp = fopen(radiation_file,"r");
+	if(fp == NULL) {
+		perror("fopen");
+		fprintf(stderr, "Can't open %s\n", radiation_file);
+		exit(34);
+	}
+	char str[1024];
+	int type;
+	int angle;
+	float gain;
+	
+	while(!feof(fp)){
+		fgets(str,1024,fp);
+		sscanf(str,"%d%d%f",&type,&angle,&gain);
+		if(type+1 == Type_){
+			gainVals[angle] = gain;
+		}
+	}
+}	
+
+/* END<Sabya,Ashwini> */
+
diff --git a/mobile/dir-antenna.h b/mobile/dir-antenna.h
new file mode 100644
index 0000000..2bcafff
--- /dev/null
+++ b/mobile/dir-antenna.h
@@ -0,0 +1,75 @@
+/* -*-	Mode:C++; c-basic-offset:8; tab-width:8; indent-tabs-mode:t -*- */
+/*
+ * Developed by: Ankur Khandelwal, Siddhartha Saha, Ashwini Kumar, Sabyasachi Roy @ IIT-Kanpur
+ *
+ */
+/* omni-antenna.h
+   omni-directional antenna
+*/
+
+#ifndef ns_dirantenna_h
+#define ns_dirantenna_h
+
+#include <antenna.h>
+
+class DirAntenna : public Antenna {
+
+public:
+  DirAntenna();
+  
+	virtual double getTxGain(double, double, double, double);
+	virtual double getRxGain(double, double, double, double);
+  
+        virtual Antenna * copy()
+	// return a pointer to a copy of this antenna that will return the 
+	// same thing for get{Rx,Tx}Gain that this one would at this point
+	// in time.  This is needed b/c if a pkt is sent with a directable
+	// antenna, this antenna may be have been redirected by the time we
+	// call getTxGain on the copy to determine if the pkt is received.
+        {
+            // since the Gt and Gr are constant w.r.t time, we can just return
+            // this object itself
+            return this;
+        }
+
+        virtual void release()
+        // release a copy created by copy() above
+        {
+                  // don't do anything
+        }
+
+/* BEGIN<Sabya,Ashwini> */
+	
+ virtual int command(int argc, const char*const* argv);
+ int getangle(){ return Angle_;}
+ int getwidth(){ return Width_;}
+ int getLA(){ return lowerAngle;}
+ int getUA(){ return upperAngle;}
+ double getSAR(){ return solidAngleRatio;}
+ void setSAR();
+ void initialize_radiation_pattern();
+
+/* END<Sabya,Ashwini> */ 
+
+protected:
+	double Gt_;		       // gain of transmitter (db)
+	double Gr_;		       // gain of receiver (db)
+	int Angle_;                    // orientation of the antenna (from the positive X-axis) (degrees) 
+	int Width_;                    // this is the width of the dir-antenna, basically, the angular range to which it can transfer.
+
+/* BEGIN<Sabya,Ashwini> */
+	
+	int Type_;		       // Specifying the "type" of directional antenna to use. Type 0 implies the width should also be specified 
+	
+	float gainVals[360];  // Stores the gain values for this antenna
+
+	/* END<Sabya,Ashwini> */ 
+private:
+	int lowerAngle;
+	int upperAngle;
+	double solidAngleRatio;
+
+};
+
+
+#endif // ns_dirantenna_h
diff --git a/tcl/lib/ns-default.tcl b/tcl/lib/ns-default.tcl
index 470e2a8..c28344f 100644
--- a/tcl/lib/ns-default.tcl
+++ b/tcl/lib/ns-default.tcl
@@ -750,6 +750,21 @@ Antenna/OmniAntenna set Z_ 1.5
 Antenna/OmniAntenna set Gt_ 1.0
 Antenna/OmniAntenna set Gr_ 1.0
 
+#
+# Unity gain, directional antennas
+# Set up the antennas to be centered in the node and 1.5 meters above it
+Antenna/DirAntenna set X_ 0
+Antenna/DirAntenna set Y_ 0
+Antenna/DirAntenna set Z_ 1.5
+Antenna/DirAntenna set Gt_ 1.0
+Antenna/DirAntenna set Gr_ 1.0
+Antenna/DirAntenna set Angle_ 0
+Antenna/DirAntenna set Width_ 360
+
+#sroy+ash
+Antenna/DirAntenna set Type_ 0
+#sroy+ash
+
 Phy set debug_ false
 
 # Initialize the SharedMedia interface with parameters to make
